Google Form : 


1. 
Question : "რა არის !important-ი css-ში და შეგვიძლია თუ არა მისი გამოყენება tailwind-ში?" 
Answer :  !important როცა ვიყენებთ, ეგ სტილი უპირატესია სხვებზე. Tailwind-ში ისეა მოწყობილი ყველაფერი, რომ მაგის გარეშეც შეგიძლია სტილების კონტროლი.

2. 
Question : "რა არის <iframe>?" 
Answer : 
სხვა საიტის ჩასასმელად ვიყენებთ.
3.
Question : "მოიყვანეთ სემანტიკური ელემენტების მაგალითები" 
Answer : 
header, footer, main, section, nav.
4.
Question : "რა განსხვავებებია position: relative-ს, fixed-ს, absolute-სა და sticky-ის შორის?" 
Answer : 
relative იმოძრავებს თავისივე საწყისი მდგომარეობიდან მაგრამ თუ მას მივანიჭებთ მშობელ divს და ჩავწერთ აბსოლუტს ის იმოძრავებს ისე როგორც ჩვენ დავუწერთ, fixed სქროლთან ერთად მოძრაობს sticky არის ელემენტი რომელიც ფოინთერს რომ შეეხოს ეკრანის topს და შემდეგ მოყვება სქროლს.
5.
Question : "რითი განსხვავდება rem და em-ი ერთმანეთისგან?" 
Answer : 
rem და em განსხვავდებიან ერთმანეთისგან იმით რომ em ის ზომა დამოკიდებულია ამ ელემენტის მშობლის შრიფტის ზომაზე და rem-ის ზომა ყოველთვის 16px ს ზომას
6.
Question : "რა არის ვირტუალური DOM-ი?" 
Answer : 
DOMის დუპლიკატი, სადაც react ხედავს ცვლილებებს და რაც ბოლოს შეიცვალა იმას აგზავნის.
7.
Question : "რა არის useEffect-ის გამოყენების მიზანი?"
Answer : 
როცა გვინდა რომ ავტომატურად მოხდეს რაღაც, მონაცემების წამოღება გვერდი როცა ჩაიტვირთება ან როცა რაღაც იცვლება.
8.
Question : "რა არის Zustand-ი?" 
Answer : 
ბიბლიოთეკა react-ის მდგომარეობას მართავს.
9.
Question : "რა არის და როგორ შვქმნათ დინამიური როუთი Next.js-ში" 
Answer : 
ფაილის ვქმნით და სახელს ვუწერთ [] ამ ფრჩხილებში.
10.
Question : "რისთვის ამოიყენება (home) ფოლდერის დასახლება Next-ში. " 
Answer : 
საიტის მთვარი ფეიჯი. ამ ფოლდერში ვაწყობთ მთვარ გვერდებს.
 
11.
Question: "რა განსხვავებაა useState-ით, useRef-ით და უბრალოდ `let a = 5`-ით შექმნილ ცვლადებს შორის?"
Answer:
useState იწვევს განახლებას, useRef ცვლის რაღაცას ფონზე ისე რომ User Interface არ იცვლება, let ცვლადია.

12.

Question: "რისთვის გვჭირდება setState?"
Answer:
რომ განვაახლოთ მონაცემები და ეგ ცვლილება გამოჩდეს User Interfaceში.
13.

Question: "რისთვის გვჭირდება return-ი useEffect-ში?"
Answer:
როცა useEffect-ში return-ს ვწერთ, მაგით ვასუფთავებთ ძველ ეფექტს, სანამ ახალი გაეშვება ან კომპონენტი წაიშლება.


App.jsx-ში არესბული კოდის მიხედვით ჩასვით პასუხები.

14.

Question: "რა არის საწყისი მნიშვნელობა popupTitle state-ის?"
Answer:
(") - ცარიელი სტრინგი

15.

Question: "რას აკეთებს togglePopup ფუნქცია?"
Answer:
Popup თუ გახნილია ხურავს, თუ დახურული ხნის.

16.

Question: "რას აკეთებს handleTitleChange ფუნქცია?"
Answer:
იმ ინპუტში რასაც ვწერთ ტაიტლად, ეგ ამ ფუნქციით გადაეცემა სტეიტში — ანუ popupTitle იცვლება მაგის მიხედვით.

17.

Question: "რას აკეთებს handleMessageChange ფუნქცია?"
Answer:
 რასაც textarea-ში ვწერთ, ეგ ინახება popupMessage სტეიტში.



18.

Question: `{isPopupVisible ? 'Hide Popup' : 'Show Popup'}` რას აკეთებს ეს კონკრეტული ბრძანება?
Answer:
popup თუ გახსნილია მაშინ ამოაგდებს "hide popups" თუ არ არის popup გახსნილი მაშინ ამოგდებს "show popup".

19.

Question: `{isPopupVisible && (code)}` რისთვის გამოიყენება `&&` სიმბოლო?
Answer:
თუ isPopupVisible არის true, მაშინ გვაჩვენებს კოდს ანუ იგივე popupის კოდს რაც popupშია. თუ false არის არ გამოაქვს არაფერი.
